var WireService=function(e){"use strict";Symbol("x").toString();function t(e,t,i){i.mutated||(i.mutated=new Set,Promise.resolve().then(n.bind(void 0,e,i))),i.mutated.add(t)}function n(e,t){const n=new Set,i=t.mutated;var c,r;delete t.mutated,i.forEach(i=>{const c=function(e,t){let n=e[t.head];if(!t.tail)return n;const i=t.tail;for(let e=0,t=i.length;e<t&&null!=n;e++){const t=i[e];if("object"!=typeof n||!(t in n))return;n=n[t]}return n}(e,i);if(t.values[i.reference]===c)return;t.values[i.reference]=c;const r=t.listeners[i.head];for(let e=0,t=r.length;e<t;e++)n.add(r[e])}),c=n,r=t.values,c.forEach(e=>{const{listener:t,statics:n,reactives:i}=e,c=Object.create(null);if(i){const e=Object.keys(i);for(let t=0,n=e.length;t<n;t++){const n=e[t],s=r[i[n]];c[n]=s}}const s=Object.assign({},n,c);t.call(void 0,s)})}function i(e,n,i){const c=t.bind(void 0,e,n,i),r=function(e,t,n){const i=function e(t,n,i){if(i=i||[],!t||i.indexOf(t)>-1)return null;const c=Object.getOwnPropertyDescriptor(t,n);if(c)return c;const r=Object.getPrototypeOf(t);if(!r)return null;return i.push(t),e(r,n,i)}(e,t);let c,r,s;if(null===i||void 0===i.get&&void 0===i.set){let i=e[t];c=!0,r=function(){return i},s=function(e){i=e,n()}}else{const{set:t,get:o}=i;c=i.enumerable,s=function(i){t&&t.call(e,i),n()},r=function(){return o?o.call(e):void 0}}return{set:s,get:r,enumerable:c,configurable:!0}}(e,n.head,c);Object.defineProperty(e,n.head,r)}class c{constructor(e){this.type="ValueChangedEvent",this.value=e}}class r{constructor(e,t){this.type="LinkContextEvent",this.uid=e,this.callback=t}}function s(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}function o(e){if(!e.includes("."))return{reference:e,head:e};const t=e.split(".");return{reference:e,head:t.shift(),tail:t}}class a{constructor(e,t,n,i,c){this._cmp=e,this._def=t,this._context=n,this._wireDef=i,this._wireTarget=c}addEventListener(e,n){switch(e){case"connect":this._context["@wire"].connected.push(n);break;case"disconnect":this._context["@wire"].disconnected.push(n);break;case"config":{const e=this._wireDef.params,c=this._wireDef.static;let r;if(!e||0===(r=Object.keys(e)).length){const e=c||Object.create(null);return void n.call(void 0,e)}const s={listener:n,statics:c,reactives:e},a=this._context["@wire"].updated;r.forEach(n=>{const c=o(e[n]);let r=a.listeners[c.head];r?r.push(s):(r=[s],a.listeners[c.head]=r,i(this._cmp,c,a)),t(this._cmp,c,a)});break}default:throw new Error(`unsupported event type ${e}`)}}removeEventListener(e,t){switch(e){case"connect":s(this._context["@wire"].connected,t);break;case"disconnect":s(this._context["@wire"].disconnected,t);break;case"config":{const e=this._context["@wire"].updated.listeners,n=this._wireDef.params;n&&Object.keys(n).forEach(i=>{const c=o(n[i]),r=e[c.head];r&&function(e,t){for(let n=0,i=e.length;n<i;n++)if(e[n].listener===t)return void e.splice(n,1)}(r,t)});break}default:throw new Error(`unsupported event type ${e}`)}}dispatchEvent(e){if(e instanceof c){const t=e.value;return this._wireDef.method?this._cmp[this._wireTarget](t):this._cmp[this._wireTarget]=t,!1}if(e instanceof r){const{uid:t,callback:n}=e,i=new CustomEvent(t,{bubbles:!0,composed:!0,detail(...e){n(...e)}});return this._cmp.dispatchEvent(i),!1}if("wirecontextevent"===e.type)return this._cmp.dispatchEvent(e);throw new Error(`Invalid event ${e}.`)}}const d=new Map;function l(e){for(let t=0,n=e.length;t<n;++t)e[t].call(void 0)}const u={wiring:(e,t,n,i)=>{const c=i["@wire"]=Object.create(null);c.connected=[],c.disconnected=[],c.updated={listeners:{},values:{}};const r=n.wire,s=Object.keys(r);for(let t=0,c=s.length;t<c;t++){const c=s[t],o=r[c],l=d.get(o.adapter);if(l){const t=new a(e,n,i,o,c);l({dispatchEvent:t.dispatchEvent.bind(t),addEventListener:t.addEventListener.bind(t),removeEventListener:t.removeEventListener.bind(t)})}}},connected:(e,t,n,i)=>{let c;n.wire&&(c=i["@wire"].connected)&&l(c)},disconnected:(e,t,n,i)=>{let c;n.wire&&(c=i["@wire"].disconnected)&&l(c)}};return e.LinkContextEvent=r,e.ValueChangedEvent=c,e.register=function(e,t){d.set(e,t)},e.registerWireService=function(e){e(u)},e}({});
